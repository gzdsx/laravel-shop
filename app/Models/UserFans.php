<?php

namespace App\Models;

use App\Models\Traits\HasDates;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

/**
 * App\Models\UserFans
 *
 * @property-read \App\Models\User|null $fans
 * @property-read \App\Models\User|null $user
 * @method static \Illuminate\Database\Eloquent\Builder|UserFans newModelQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|UserFans newQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|UserFans query()
 * @mixin \Eloquent
 */
class UserFans extends Model
{
    use HasDates;

    protected $table = 'user_fans';
    protected $primaryKey = 'id';
    protected $fillable = ['uid', 'fans_id'];

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::created(function (UserFans $userFans) {
            $userFans->user->stat->increment('fans');
            $userFans->fans->stat->increment('follows');
        });

        static::deleting(function (UserFans $userFans) {
            $userFans->user->stat->decrement('fans');
            $userFans->fans->stat->decrement('follows');
        });
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function user()
    {
        return $this->belongsTo(User::class, 'uid', 'uid');
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function fans()
    {
        return $this->belongsTo(User::class, 'fans_id', 'uid');
    }
}
