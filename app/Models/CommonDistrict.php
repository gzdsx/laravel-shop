<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;


/**
 * App\Models\CommonDistrict
 *
 * @property int $id ID
 * @property int $parent_id 父级ID
 * @property string|null $name 名称
 * @property string|null $fullname 全称
 * @property int $level 级别
 * @property float|null $lng 经度
 * @property float|null $lat 纬度
 * @property string|null $pinyin 拼音
 * @property string|null $letter 首字母
 * @property string|null $zonecode 区位代码
 * @property string|null $citycode 区号
 * @property string|null $zipcode 邮编
 * @property int $sort_num 排序
 * @property-read \Illuminate\Database\Eloquent\Collection<int, CommonDistrict> $children
 * @property-read int|null $children_count
 * @property-read \Illuminate\Database\Eloquent\Collection<int, CommonDistrict> $childs
 * @property-read int|null $childs_count
 * @property-read CommonDistrict|null $parent
 * @method static Builder|CommonDistrict newModelQuery()
 * @method static Builder|CommonDistrict newQuery()
 * @method static Builder|CommonDistrict query()
 * @method static Builder|CommonDistrict whereCitycode($value)
 * @method static Builder|CommonDistrict whereFullname($value)
 * @method static Builder|CommonDistrict whereId($value)
 * @method static Builder|CommonDistrict whereLat($value)
 * @method static Builder|CommonDistrict whereLetter($value)
 * @method static Builder|CommonDistrict whereLevel($value)
 * @method static Builder|CommonDistrict whereLng($value)
 * @method static Builder|CommonDistrict whereName($value)
 * @method static Builder|CommonDistrict whereParentId($value)
 * @method static Builder|CommonDistrict wherePinyin($value)
 * @method static Builder|CommonDistrict whereSortNum($value)
 * @method static Builder|CommonDistrict whereZipcode($value)
 * @method static Builder|CommonDistrict whereZonecode($value)
 * @mixin \Eloquent
 */
class CommonDistrict extends Model
{
    protected $table = 'common_district';
    protected $primaryKey = 'id';
    protected $fillable = [
        'parent_id', 'name', 'fullname', 'level', 'lng', 'lat', 'pinyin', 'letter', 'zonecode', 'citycode', 'zipcode', 'sort_num'
    ];

    public $timestamps = false;

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::addGlobalScope('sort', function (Builder $builder) {
            return $builder->orderBy('sort_num')->orderBy('id');
        });
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function childs()
    {
        return $this->hasMany(CommonDistrict::class, 'parent_id', 'id');
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function children()
    {
        return $this->childs()->with('children');
    }

    /**
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function parent()
    {
        return $this->belongsTo(CommonDistrict::class, 'parent_id', 'id');
    }
}
