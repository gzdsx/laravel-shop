<?php/*|--------------------------------------------------------------------------| API Routes|--------------------------------------------------------------------------|| Here is where you can register API routes for your application. These| routes are loaded by the RouteServiceProvider within a group which| is assigned the "api" middleware group. Enjoy building your API!|*/use Illuminate\Support\Facades\Route;Route::group(['namespace' => 'Api'], function () {    //认证    Route::group(['namespace' => 'OAuth'], function () {        Route::post('register', 'RegisterController@register');    });    //基础    Route::group(['namespace' => 'Foundation'], function () {        //区位        Route::get('district/get', 'DistrcitController@get');        Route::get('district/batchget', 'DistrcitController@batchget');        //内容模块        Route::get('block/get', 'BlockController@get');        Route::get('block/batchget', 'BlockController@batchget');        Route::get('block/item/get', 'BlockItemController@get');        Route::get('block/item/batchget', 'BlockItemController@batchget');        //apns        Route::post('apns/jpush', 'ApnsController@jpush');        //素材        Route::get('material/get', 'MaterialController@get')->middleware('auth:api');        Route::get('material/batchget', 'MaterialController@batchget')->middleware('auth:api');        Route::post('material/delete', 'MaterialController@delete')->middleware('auth:api');        Route::post('material/uploadimg', 'MaterialController@uploadImg')->middleware('auth:api');        Route::post('material/uploadfile', 'MaterialController@uploadFile')->middleware('auth:api');        //快递        Route::get('express/get', 'ExpressController@get')->middleware('auth:api');        Route::get('express/getall', 'ExpressController@getAll')->middleware('auth:api');        //短信        Route::post('sms/sendcode', 'SmsController@sendCode');        Route::post('sms/verify', 'SmsController@verify');    });    //用户    Route::group(['namespace' => 'User', 'middleware' => 'auth:api'], function () {        Route::get('user/info', 'UserController@info');        Route::get('user/account', 'UserController@account');        Route::get('user/profile', 'UserController@profile');        Route::post('user/update_profile', 'UserController@updateProfile');        Route::post('user/update_avatar', 'UserController@updateAvatar');        //账号安全        Route::post('security/update_password', 'SecurityController@updatePassword');        Route::post('security/update_account_password', 'SecurityController@updateAccountPassword');        Route::post('security/update_mobile', 'SecurityController@updateMobile');        Route::post('security/update_email', 'SecurityController@updateEmail');        //地址        Route::get('address/get', 'AddressController@get');        Route::get('address/batchget', 'AddressController@batchget');        Route::post('address/save', 'AddressController@save');        Route::post('address/update', 'AddressController@update');        Route::post('address/delete', 'AddressController@delete');        Route::post('address/setdefault', 'AddressController@setDefault');        //通知        Route::get('notification/get', 'NotificationController@get');        Route::get('notification/batchget', 'NotificationController@batchget');    });    //页面    Route::group(['namespace' => 'Page', 'prefix' => 'page'], function () {        Route::get('get', 'PageController@get');        Route::get('batchget', 'PageController@batchget');        Route::get('categories', 'PageController@categories');    });    //文章    Route::group(['namespace' => 'Post', 'prefix' => 'post'], function () {        Route::get('get', 'PostController@get');        Route::get('batchget', 'PostController@batchget');        Route::get('category/get', 'CategoryController@get');        Route::get('category/getall', 'CategoryController@getAll');        Route::get('collect/batchget', 'CollectController@batchget')->middleware('auth:api');        Route::post('collect/create', 'CollectController@create')->middleware('auth:api');        Route::post('collect/delete', 'CollectController@delete')->middleware('auth:api');    });    //直播    Route::group(['namespace' => 'Live', 'prefix' => 'live'], function () {        Route::get('get', 'LiveController@get');        Route::get('batchget', 'LiveController@batchget');        Route::get('getticket', 'LiveController@getTicket')->middleware('auth:api');;        Route::post('buyticket', 'LiveController@buyTicket')->middleware('auth:api');        Route::get('channel/get', 'ChannelController@get');        Route::get('channel/getall', 'ChannelController@getAll');    });    //视频    Route::group(['namespace' => 'Video', 'prefix' => 'video'], function () {        Route::get('get', 'VideoController@get');        Route::get('batchget', 'VideoController@batchget');    });    //产品    Route::group(['namespace' => 'Product', 'prefix' => 'product'], function () {        Route::get('get', 'ProductController@get');        Route::get('batchget', 'ProductController@batchget');        Route::get('category/get', 'CategoryController@get');        Route::get('category/getall', 'CategoryController@getAll');        Route::get('category/search', 'CategoryController@search');        Route::get('collect/batchget', 'CollectController@batchget')->middleware('auth:api');        Route::post('collect/create', 'CollectController@create')->middleware('auth:api');        Route::post('collect/delete', 'CollectController@delete')->middleware('auth:api');    });    //门店    Route::group(['namespace' => 'Shop'], function () {        //购物车        Route::get('cart/getall', 'CartController@getAll');        Route::get('cart/getitems', 'CartController@getItems');        Route::post('cart/create', 'CartController@create');        Route::post('cart/update', 'CartController@update');        Route::post('cart/delete', 'CartController@delete');        Route::post('cart/move', 'CartController@move');        Route::post('cart/truncate', 'CartController@truncate');        //退货理由        Route::get('refundreason/getall', 'RefundReasonController@getAll')->middleware('auth:api');        //运费模板        Route::get('freighttemplate/getall', 'FreightTemplateController@getAll')->middleware('auth:api');    });    //交易    Route::group(['namespace' => 'Trade', 'middleware' => 'auth:api'], function () {        //已购        Route::get('bought/get', 'BoughtController@get');        Route::get('bought/batchget', 'BoughtController@batchget');        Route::post('bought/close', 'BoughtController@close');        Route::post('bought/confirm', 'BoughtController@confirm');        Route::post('bought/delete', 'BoughtController@delete');        Route::post('bought/notice', 'BoughtController@notice');        Route::post('bought/rate', 'BoughtController@rate');        Route::get('bought/getitem', 'BoughtController@getItem');        //已售        Route::get('sold/get', 'SoldController@get');        Route::get('sold/batchget', 'SoldController@batchget');        Route::post('sold/adjustprice', 'SoldController@adjustPrice');        Route::post('sold/send', 'SoldController@send');        //退货        Route::get('refund/get', 'RefundController@get');        Route::get('refund/batchget', 'RefundController@batchget');        Route::post('refund/apply', 'RefundController@apply');        Route::post('refund/create', 'RefundController@create');        Route::post('refund/revoke', 'RefundController@revoke');        Route::post('refund/delete', 'RefundController@delete');        Route::post('refund/save', 'RefundController@save');        Route::post('refund/send', 'RefundController@send');        //交易流水        Route::get('transaction/get', 'TransactionController@get');        Route::get('transaction/batchget', 'TransactionController@batchget');        Route::post('transaction/delete', 'TransactionController@delete');        //订单操作        Route::post('order/buynow', 'OrderController@buynow');        Route::post('order/create', 'OrderController@create');        Route::post('order/confirm', 'OrderController@confirm');        Route::post('order/settlement', 'OrderController@settlement');        Route::post('order/rate', 'OrderController@rate');        Route::get('order/closereasons', function () {            return jsonSuccess(['items' => trans('trade.close_reasons')]);        });    });    //支付    Route::group(['namespace' => 'Payment', 'prefix' => 'payment', 'middleware' => 'auth:api'], function () {        //支付宝        Route::get('alipay/sign', 'AlipayController@sign');        //微信支付        Route::post('wechatpay/unify', 'WechatPayController@unify');    });    //微信小程序    Route::group(['namespace' => 'Weapp', 'prefix' => 'weapp'], function () {        Route::post('session', 'WeappController@session');        Route::post('login', 'WeappController@login');        Route::post('register', 'WeappController@register');        Route::post('getphonenumber', 'WeappController@getPhoneNumber');        Route::post('decrypt', 'WeappController@decrypt');    });    //获取APP版本(已废弃)    Route::get('getversion', function () {        $userAgent = 'time:' . time() . ',' . $_SERVER['HTTP_USER_AGENT'];        if (strpos($userAgent, 'Android') || strpos($userAgent, 'okhttp')) {            return jsonSuccess(['version' => 1.06, 'userAgent' => $userAgent]);        } else {            return jsonSuccess(['version' => 1.06, 'userAgent' => $userAgent]);        }    });    //获取APP版本    Route::get('app/getversion', function () {        $userAgent = 'time:' . time() . ',' . $_SERVER['HTTP_USER_AGENT'];        if (strpos($userAgent, 'Android') || strpos($userAgent, 'okhttp')) {            return jsonSuccess(['version' => 1.06, 'userAgent' => $userAgent]);        } else {            return jsonSuccess(['version' => 1.06, 'userAgent' => $userAgent]);        }    });});