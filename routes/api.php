<?php/*|--------------------------------------------------------------------------| API Routes|--------------------------------------------------------------------------|| Here is where you can register API routes for your application. These| routes are loaded by the RouteServiceProvider within a group which| is assigned the "api" middleware group. Enjoy building your API!|*///use Illuminate\Support\Facades\Route;Route::group(['namespace' => 'Api'], function () {    //认证    Route::group(['namespace' => 'OAuth'], function () {        Route::post('register', 'RegisterController@register');        Route::post('ver_code_login', 'LoginController@verCodeLogin');    });    //用户    Route::group(['namespace' => 'User', 'prefix' => 'user'], function () {        //微信        Route::post('miniprogram.session', 'MiniProgramController@session');        Route::post('miniprogram.login', 'MiniProgramController@login');        Route::post('miniprogram.register', 'MiniProgramController@register');        Route::post('miniprogram.decrypt', 'MiniProgramController@decrypt');        Route::post('miniprogram.phonenumber', 'MiniProgramController@getPhoneNumber');        Route::post('miniprogram.confirm_login', 'MiniProgramController@confirmLogin')->middleware('auth:api');        Route::post('officialaccount.login', 'OfficialAccountController@login');        Route::group(['middleware' => 'auth:api',], function () {            //用户            Route::get('user.getInfo', 'UserController@getInfo');            Route::get('info.getInfo', 'UserInfoController@getInfo');            Route::post('info.updateAvatar', 'UserInfoController@updateAvatar');            Route::post('info.updateName', 'UserInfoController@updateName');            Route::post('password.reset', 'PasswordController@reset');            Route::post('phone.bind', 'PhoneController@bind');            Route::post('email.bind', 'EmailController@bind');            //资料            Route::get('profile', 'ProfileController@profile');            Route::post('profile.update', 'ProfileController@update');            //账户            Route::get('account', 'AccountController@getAccount');            Route::post('account.resetpassword', 'AccountController@resetPassword');            Route::post('account.transfer', 'AccountController@transfer');            //账单            Route::get('bill.getInfo', 'BillController@getInfo');            Route::get('bill.getList', 'BillController@getList');            //地址            Route::get('address.getInfo', 'AddressController@getInfo');            Route::get('address.getList', 'AddressController@getList');            Route::post('address.create', 'AddressController@create');            Route::post('address.update', 'AddressController@update');            Route::post('address.delete', 'AddressController@delete');            Route::post('address.setDefault', 'AddressController@setDefault');            //通知            Route::get('notification', 'NotificationController@notification');            Route::get('readnotification', 'NotificationController@readNotifications');            Route::get('unreadnotification', 'NotificationController@unreadNotification');            Route::get('notification.getInfo', 'NotificationController@getInfo');            Route::post('notification.delete', 'NotificationController@delete');            //转账            Route::get('transfer.commonly', 'TransferController@commonly');            Route::get('transfer.search', 'TransferController@search');            Route::get('transfer.find', 'TransferController@find');            //工作经验            Route::get('position.getInfo', 'PositionController@getInfo');            Route::get('position.getList', 'PositionController@getList');            Route::post('position.create', 'PositionController@create');            Route::post('position.update', 'PositionController@update');            Route::post('position.delete', 'PositionController@delete');            //教育经历            Route::get('education.getInfo', 'EducationController@getInfo');            Route::get('education.getList', 'EducationController@getList');            Route::post('education.create', 'EducationController@create');            Route::post('education.update', 'EducationController@update');            Route::post('education.delete', 'EducationController@delete');            //求职意向            Route::get('job.intention.getList', 'JobIntentionController@getList');            Route::post('job.intention.create', 'JobIntentionController@create');            Route::post('job.intention.update', 'JobIntentionController@update');            Route::post('job.intention.delete', 'JobIntentionController@delete');        });    });    //通用    Route::group(['namespace' => 'Common', 'prefix' => 'common'], function () {        //区位        Route::get('district.getInfo', 'DistrcitController@getInfo');        Route::get('district.getList', 'DistrcitController@getList');        Route::get('district.getCityList', 'DistrcitController@getCityList');        //内容模块        Route::get('block.getInfo', 'BlockController@getInfo');        Route::get('block.getList', 'BlockController@getList');        Route::get('block.item.getList', 'BlockItemController@getList');        //素材        Route::get('material.getInfo', 'MaterialController@getInfo')->middleware('auth:api');        Route::get('material.getList', 'MaterialController@getList')->middleware('auth:api');        Route::post('material.upload', 'MaterialController@upload')->middleware('auth:api');        //快递        Route::get('express.getInfo', 'ExpressController@getInfo')->middleware('auth:api');        Route::get('express.getList', 'ExpressController@getList')->middleware('auth:api');        //菜单        Route::get('menu.getInfo', 'MenuController@getInfo');        //客服        Route::get('kefu.getInfo', 'KefuController@getInfo');        Route::get('kefu.getList', 'KefuController@getList');        //链接管理        Route::get('link.getInfo', 'LinkController@getInfo');        Route::get('link.getList', 'LinkController@getList');        //广告管理        Route::get('ad.getInfo', 'AdController@getInfo');        Route::get('ad.getList', 'AdController@getList');        //apns        Route::post('apns/jpush', 'ApnsController@jpush');        //feedback        Route::post('feedback.create', 'FeedbackController@create')->middleware('auth:api');    });    //页面    Route::group(['namespace' => 'Page', 'prefix' => 'page'], function () {        Route::get('page.getInfo', 'PageController@getInfo');        Route::get('page.getList', 'PageController@getList');        Route::get('category.getList', 'CategoryController@getList');    });    //交易    Route::group(['namespace' => 'Trade', 'prefix' => 'trade', 'middleware' => 'auth:api'], function () {        Route::get('bought.getInfo', 'BoughtController@getInfo');        Route::get('bought.getList', 'BoughtController@getList');        Route::post('bought.notice', 'BoughtController@notice');        Route::post('bought.cancel', 'BoughtController@cancel');        Route::post('bought.confirm', 'BoughtController@confirm');        Route::post('bought.delete', 'BoughtController@delete');        Route::get('bought.getTradeList', 'BoughtController@getTradeList');        Route::get('bought.getTradeDetail', 'BoughtController@getTradeDetail');        //已售        Route::get('sold/info', 'SoldController@getInfo');        Route::get('sold/list', 'SoldController@getList');        Route::post('sold/adjustprice', 'SoldController@adjustPrice');        Route::post('sold/send', 'SoldController@send');        //付款        Route::post('order.pay', 'OrderPayController@pay')->middleware('auth:api');        //退货        Route::get('refund.getInfo', 'RefundController@getInfo');        Route::get('refund.getList', 'RefundController@getList');        Route::post('refund.apply', 'RefundController@apply');        Route::post('refund.create', 'RefundController@create');        Route::post('refund.update', 'RefundController@update');        Route::post('refund.revoke', 'RefundController@revoke');        Route::post('refund.delete', 'RefundController@delete');        Route::post('refund.send', 'RefundController@send');        Route::get('refund.getReasonList', 'RefundController@getReasonList');        Route::get('refund.getTradeDetail', 'RefundController@getTradeDetail');        Route::get('refund.getAddress', 'RefundController@getAddress');    });    //电商    Route::group(['namespace' => 'Ecom', 'prefix' => 'ecom'], function () {        //产品        Route::get('product.getInfo', 'ProductItemController@getInfo');        Route::get('product.getList', 'ProductItemController@getList');        Route::get('product.content.getInfo', 'ProductContentController@getInfo');        //收藏        Route::post('product.subscribe.create', 'ProductSubscribeController@create')->middleware('auth:api');        Route::post('product.subscribe.delete', 'ProductSubscribeController@delete')->middleware('auth:api');        Route::post('product.subscribe.toggle', 'ProductSubscribeController@toggle')->middleware('auth:api');        Route::post('product.subscribe.query', 'ProductSubscribeController@query')->middleware('auth:api');        Route::get('product.subscribe.getList', 'ProductSubscribeController@getList')->middleware('auth:api');        //产品分类        Route::get('product.category.getInfo', 'ProductCategoryController@getInfo');        Route::get('product.category.getList', 'ProductCategoryController@getList');        //店铺        Route::get('shop.getInfo', 'ShopController@getInfo');        Route::get('shop.getList', 'ShopController@getList');        Route::get('shop.getShopItemCount', 'ShopController@getShopItemCount');        Route::post('shop.subscribe.create', 'ShopSubscribeController@create')->middleware('auth:api');        Route::post('shop.subscribe.delete', 'ShopSubscribeController@delete')->middleware('auth:api');        Route::post('shop.subscribe.toggle', 'ShopSubscribeController@toggle')->middleware('auth:api');        Route::post('shop.subscribe.query', 'ShopSubscribeController@query')->middleware('auth:api');        Route::get('shop.subscribe.getList', 'ShopSubscribeController@getList')->middleware('auth:api');        //购物车        Route::get('cart.getInfo', 'CartController@getInfo')->middleware('auth:api');        Route::post('cart.create', 'CartController@create')->middleware('auth:api');        Route::post('cart.delete', 'CartController@delete')->middleware('auth:api');        Route::post('cart.updateQuantity', 'CartController@updateQuantity')->middleware('auth:api');        Route::post('cart.confirm', 'CartController@confirm')->middleware('auth:api');        Route::post('cart.settlement', 'CartController@settlement')->middleware('auth:api');        //订单        Route::post('order.calculate', 'OrderController@calculate')->middleware('auth:api');        Route::post('order.create', 'OrderController@create')->middleware('auth:api');        Route::get('order.close.reasons', function () {            return jsonSuccess(['items' => trans('trade.close_reasons')]);        })->middleware('auth:api');    });    //文章    Route::group(['namespace' => 'Post', 'prefix' => 'post'], function () {        Route::get('item.getInfo', 'ItemController@getInfo');        Route::get('item.getList', 'ItemController@getList');        Route::get('content.getInfo', 'ContentController@getInfo');        Route::get('category.getInfo', 'CategoryController@getInfo');        Route::get('category.getList', 'CategoryController@getList');        Route::get('subscribe.getList', 'SubscribeController@getList')->middleware('auth:api');        Route::post('subscribe.toggle', 'SubscribeController@toggle')->middleware('auth:api');        Route::post('subscribe.delete', 'SubscribeController@delete')->middleware('auth:api');        Route::post('subscribe.query', 'SubscribeController@query')->middleware('auth:api');    });    //直播    Route::group(['namespace' => 'Live', 'prefix' => 'live'], function () {        Route::get('info', 'LiveController@getInfo');        Route::get('list', 'LiveController@getList');        Route::get('channel/info', 'ChannelController@getInfo');        Route::get('channel/list', 'ChannelController@getList');        Route::get('ticket', 'LiveController@getTicket')->middleware('auth:api');;        Route::post('ticket/buy', 'LiveController@buyTicket')->middleware('auth:api');    });    //视频    Route::group(['namespace' => 'Video', 'prefix' => 'video'], function () {        Route::get('info', 'VideoController@getInfo');        Route::get('list', 'VideoController@getList');        Route::post('save', 'VideoController@save')->middleware('auth:api');        Route::post('create', 'VideoController@create')->middleware('auth:api');        Route::post('delete', 'VideoController@delete')->middleware('auth:api');        Route::post('upload', 'VideoController@upload')->middleware('auth:api');        Route::post('watch', 'VideoController@watch')->middleware('auth:api');        //点赞        Route::get('like/check', 'LikeController@check')->middleware('auth:api');        Route::post('like/toggle', 'LikeController@toggle')->middleware('auth:api');        Route::post('like/create', 'LikeController@create')->middleware('auth:api');        Route::post('like/delete', 'LikeController@delete')->middleware('auth:api');        //评论        Route::get('comment/list', 'CommentController@getList');        Route::post('comment/create', 'CommentController@create')->middleware('auth:api');    });    Route::group(['namespace' => 'Lbs', 'prefix' => 'lbs'], function () {        Route::get('geocode.geo', 'GeoCodeController@geo');        Route::get('geocode.regeo', 'GeoCodeController@regeo');    });});//获取APP版本Route::get('app/getversion', function () {    $userAgent = 'time:' . time() . ',' . $_SERVER['HTTP_USER_AGENT'];    if (strpos($userAgent, 'Android') || strpos($userAgent, 'okhttp')) {        return jsonSuccess(['version' => 1.0, 'userAgent' => $userAgent]);    } else {        return jsonSuccess(['version' => 1.0, 'userAgent' => $userAgent]);    }});Route::any('reachable', function () {    return jsonSuccess();});