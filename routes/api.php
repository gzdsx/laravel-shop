<?php/*|--------------------------------------------------------------------------| API Routes|--------------------------------------------------------------------------|| Here is where you can register API routes for your application. These| routes are loaded by the RouteServiceProvider within a group which| is assigned the "api" middleware group. Enjoy building your API!|*/Route::group(['namespace' => 'Api'], function () {    Route::post('register', 'RegisterController@register');    //product    Route::get('product/get', 'ProductController@get');    Route::get('product/batchget', 'ProductController@batchget');    Route::get('product/category/get', 'ProductCategoryController@get');    Route::get('product/category/getall', 'ProductCategoryController@getAll');    Route::get('product/category/search', 'ProductCategoryController@search');    Route::get('product/collect/batchget', 'ProductCollectController@batchget')->middleware('auth:api');    Route::post('product/collect/create', 'ProductCollectController@create')->middleware('auth:api');    Route::post('product/collect/delete', 'ProductCollectController@delete')->middleware('auth:api');    //post    Route::get('post/get', 'PostController@get');    Route::get('post/batchget', 'PostController@batchget');    Route::get('post/category/get', 'PostCategoryController@get');    Route::get('post/category/getall', 'PostCategoryController@getAll');    Route::get('post/collect/batchget', 'PostCollectController@batchget')->middleware('auth:api');    Route::post('post/collect/create', 'PostCollectController@create')->middleware('auth:api');    Route::post('post/collect/delete', 'PostCollectController@delete')->middleware('auth:api');    //page    Route::get('page/get', 'PageController@get');    Route::get('page/batchget', 'PageController@batchget');    //district    Route::get('district/get', 'DistrcitController@get');    Route::get('district/batchget', 'DistrcitController@batchget');    //block    Route::get('block/get', 'BlockController@getBlock');    Route::get('block/batchget', 'BlockController@batchgetBlock');    Route::get('block/item/get', 'BlockController@getItem');    Route::get('block/item/batchget', 'BlockController@batchgetItem');    //other    Route::get('express/getall', 'ExpressController@getAll');    Route::get('refundreason/getall', 'RefundReasonController@getAll');    //live    Route::get('live/get', 'LiveController@get');    Route::get('live/batchget', 'LiveController@batchget');    Route::get('live/getticket', 'LiveController@getTicket')->middleware('auth:api');;    Route::post('live/buyticket', 'LiveController@buyTicket')->middleware('auth:api');    Route::get('live/channel/get', 'LiveChannelController@get');    Route::get('live/channel/getall', 'LiveChannelController@getAll');    //video    Route::get('video/get', 'VideoController@get');    Route::get('video/batchget', 'VideoController@batchget');    //微信小程序    Route::post('weapp/session', 'WeappController@session');    Route::post('weapp/signin', 'WeappController@signin');    Route::post('weapp/signup', 'WeappController@signup');    //apns    Route::post('apns/jpush', 'ApnsController@jpush');    Route::group(['middleware' => 'auth:api'], function () {        Route::get('user/info', 'UserController@info');        Route::post('user/avatar/update', 'UserController@updateAvatar');        Route::get('user/profile', 'UserProfileController@profile');        Route::post('user/profile/update', 'UserProfileController@update');        Route::get('account/get', 'AccountController@get');        Route::get('freighttemplate/getall', 'FreightTemplateController@getAll');        Route::get('material/get', 'MaterialController@get');        Route::get('material/batchget', 'MaterialController@batchget');        Route::post('material/delete', 'MaterialController@delete');        Route::post('material/uploadimg', 'MaterialController@uploadImg');        //地址        Route::get('address/get', 'AddressController@get');        Route::get('address/batchget', 'AddressController@batchget');        Route::post('address/save', 'AddressController@save');        Route::post('address/update', 'AddressController@update');        Route::post('address/delete', 'AddressController@delete');        Route::post('address/setdefault', 'AddressController@setDefault');        Route::post('order/buynow', 'OrderController@buynow');        Route::post('order/create', 'OrderController@create');        Route::post('order/confirm', 'OrderController@confirm');        Route::post('order/settlement', 'OrderController@settlement');        Route::post('order/rate', 'OrderController@rate');        Route::get('order/closereason/getall', function () {            return jsonSuccess(['items' => trans('trade.close_reasons')]);        });        Route::get('cart/getall', 'CartController@getAll');        Route::get('cart/getitems', 'CartController@getItems');        Route::post('cart/create', 'CartController@create');        Route::post('cart/update', 'CartController@update');        Route::post('cart/delete', 'CartController@delete');        Route::post('cart/move', 'CartController@move');        Route::post('cart/truncate', 'CartController@truncate');        Route::get('bought/get', 'BoughtController@get');        Route::get('bought/batchget', 'BoughtController@batchget');        Route::post('bought/close', 'BoughtController@close');        Route::post('bought/confirm', 'BoughtController@confirm');        Route::post('bought/delete', 'BoughtController@delete');        Route::post('bought/notice', 'BoughtController@notice');        Route::post('bought/rate', 'BoughtController@rate');        Route::get('bought/getitem', 'BoughtController@getItem');        Route::get('sold/get', 'SoldController@get');        Route::get('sold/batchget', 'SoldController@batchget');        Route::post('sold/adjustprice', 'SoldController@adjustPrice');        Route::post('sold/send', 'SoldController@send');        //refund        Route::get('refund/get', 'RefundController@get');        Route::get('refund/batchget', 'RefundController@batchget');        Route::post('refund/apply', 'RefundController@apply');        Route::post('refund/create', 'RefundController@create');        Route::post('refund/revoke', 'RefundController@revoke');        Route::post('refund/delete', 'RefundController@delete');        Route::post('refund/save', 'RefundController@save');        Route::post('refund/send', 'RefundController@send');        //交易        Route::get('transaction/batchget', 'TransactionController@batchget');        Route::post('transaction/delete', 'TransactionController@delete');        //通知        Route::get('notification/get', 'NotificationController@get');        Route::get('notification/batchget', 'NotificationController@batchget');        //账号安全        Route::post('security/password/update', 'SecurityController@updatePassword');        Route::post('security/paymentpwd/update', 'SecurityController@updatePaymentPwd');        Route::post('security/mobile/update', 'SecurityController@updateMobile');        Route::post('security/email/update', 'SecurityController@updateEmail');        //支付宝支付        Route::get('alipay/sign', 'AlipayController@sign');        //微信支付        Route::post('wechat/pay/unify', 'WechatPayController@unify');    });    //version    Route::get('getversion', function () {        $userAgent = 'time:' . time() . ',' . $_SERVER['HTTP_USER_AGENT'];        if (strpos($userAgent, 'Android') || strpos($userAgent, 'okhttp')) {            return jsonSuccess(['version' => 1.06, 'userAgent' => $userAgent]);        } else {            return jsonSuccess(['version' => 1.06, 'userAgent' => $userAgent]);        }    });});